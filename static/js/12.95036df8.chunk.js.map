{"version":3,"sources":["tester/data-sources/my-rest-api/api.ts"],"names":["debug","Debug","searchSymbol","keywords","a","obj","symbol","name","type","currency","getCandles","period","axios","get","store","getState","testerConfigs","myRestApiUrl","resp","status","data","map","candle","console","log","date","open","high","low","close","volume","moment","toDate"],"mappings":"mUAOMA,EAAQC,IAAM,aAEhBC,EAAY,uCAAG,WAAgBC,GAAhB,eAAAC,EAAA,6DAEjBJ,EAAM,WAAY,CADdK,EAAuB,CAAEC,OAAQ,YAAcH,EAAUI,KAAM,gBAAiBC,KAAM,gBAAiBC,SAAU,uBADpG,kBAGV,CAACJ,IAHS,2CAAH,sDAsBZK,EAAU,uCAAG,WAAgBJ,EAAgBK,GAAhC,eAAAP,EAAA,sEACIQ,IAAMC,IAAIC,IAAMC,WAAWC,cAAcC,cAD7C,UAEK,OADdC,EADS,QAENC,OAFM,yCAGWD,EAAKE,KAlBhBC,KAAI,SAAAC,GACjBC,QAAQC,IAAI,8BAA+BF,EAAOG,MAClD,IAAIpB,EAAuB,CAAEoB,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GASlF,OAPAzB,EAAIoB,KAAOM,IAAOT,EAAOG,MAAMO,SAC/B3B,EAAIqB,KAAOJ,EAAOI,KAClBrB,EAAIsB,KAAOL,EAAOK,KAClBtB,EAAIuB,IAAMN,EAAOM,IACjBvB,EAAIwB,MAAQP,EAAOO,MACnBxB,EAAIyB,OAASR,EAAOQ,OAEbzB,MAIM,cAKbkB,QAAQC,IAAI,qBALC,kBAMN,IANM,2CAAH","file":"static/js/12.95036df8.chunk.js","sourcesContent":["import * as i from '../../interfaces'\r\n\r\n// DEBUGGING\r\nimport Debug from 'debug'\r\nimport moment from 'moment';\r\nimport store from '../../../redux/store'\r\nimport axios from 'axios';\r\nconst debug = Debug('myrestapi')\r\n\r\nlet searchSymbol = async function (keywords: string) {\r\n  let obj: i.ICommonSymbol = { symbol: 'rest-api-' + keywords, name: 'rest-api-name', type: 'rest-api-type', currency: 'rest-api-currency' };\r\n  debug('Symbols:', [obj]);\r\n  return [obj];\r\n}\r\n\r\nlet normalizeCandles = function (candles: Array<any>) {\r\n  return candles.map(candle => {\r\n    console.log('myrestapi candle timestamp:', candle.date); // 24.04.2019 05:00:00.000 GMT+0300\r\n    let obj: i.ICommonCandle = { date: 0, open: 0, high: 0, low: 0, close: 0, volume: 0 };\r\n\r\n    obj.date = moment(candle.date).toDate(); // 02.01.2019 01:00:00.000 GMT+0200\r\n    obj.open = candle.open;\r\n    obj.high = candle.high;\r\n    obj.low = candle.low;\r\n    obj.close = candle.close;\r\n    obj.volume = candle.volume;\r\n\r\n    return obj;\r\n  });\r\n}\r\n\r\nlet getCandles = async function (symbol: string, period: number) {\r\n  const resp = await axios.get(store.getState().testerConfigs.myRestApiUrl);\r\n  if (resp.status === 200) {\r\n    return normalizeCandles(resp.data);\r\n  } else {\r\n    console.log('getCandles failed');\r\n    return [];\r\n  }\r\n}\r\n\r\nexport {\r\n  searchSymbol,\r\n  getCandles\r\n}"],"sourceRoot":""}
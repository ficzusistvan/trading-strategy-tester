{"version":3,"sources":["tester/data-sources/alphavantage/api.ts"],"names":["debug","Debug","API_KEY","process","searchSymbol","keywords","a","axios","get","resp","data","bestMatches","map","symbol","obj","name","type","currency","normalizeCandles","candles","parsed","Object","entries","key2","value2","date","open","high","low","close","volume","moment","toDate","unshift","getCandles","period","url","key1","value1","includes"],"mappings":"mUAQMA,EAAQC,IAAM,SAEdC,EAAUC,mBAaZC,EAAY,uCAAG,WAAgBC,GAAhB,eAAAC,EAAA,sEACEC,IAAMC,IAAI,qEAAuEH,EAAW,WAAaH,GAD3G,cACXO,EADW,OAEjBT,EAAM,eAAgBS,EAAKC,MAFV,kBAGOD,EAAKC,KAAKC,YAbnBC,KAAI,SAAAC,GACjB,IAAIC,EAAiB,CAAED,OAAQ,GAAIE,KAAM,GAAIC,KAAM,GAAIC,SAAU,IAKjE,OAJAH,EAAID,OAASA,EAAO,aACpBC,EAAIC,KAAOF,EAAO,WAClBC,EAAIE,KAAOH,EAAO,WAClBC,EAAIG,SAAWJ,EAAO,eACfC,MAIQ,2CAAH,sDAMZI,EAAmB,SAAUC,GAG/B,IAFA,IAAMC,EAAS,GAEf,MAA2BC,OAAOC,QAAQH,GAA1C,eAAoD,CAAC,IAAD,0BAA1CI,EAA0C,KAApCC,EAAoC,KAC9CV,EAAiB,CAAEW,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAE5EhB,EAAIW,KAAOM,IAAOR,GAAMS,SACxBlB,EAAIY,KAAOF,EAAO,WAClBV,EAAIa,KAAOH,EAAO,WAClBV,EAAIc,IAAMJ,EAAO,UACjBV,EAAIe,MAAQL,EAAO,YACnBV,EAAIgB,OAASN,EAAO,aAEpBJ,EAAOa,QAAQnB,GAEjB,OAAOM,GAGLc,EAAU,uCAAG,WAAgBrB,EAAgBsB,GAAhC,6BAAA7B,EAAA,6DAOfN,EAAM,wBAJJoC,EADED,EAAS,GACL,0EAA4EtB,EAAS,aAAesB,EAAS,cAAgBjC,EAE7H,uEAAyEW,EAAS,WAAaX,GALxF,SAQIK,IAAMC,IAAI4B,GARd,OAQT3B,EARS,OASfT,EAAM,wBAAyBS,EAAKC,MATrB,MAUYW,OAAOC,QAAQb,EAAKC,MAVhC,sEAUL2B,EAVK,KAUCC,EAVD,MAWTD,EAAKE,SAAS,eAXL,0CAYJrB,EAAiBoB,IAZb,uEAAH","file":"static/js/7.ea4f3a66.chunk.js","sourcesContent":["// GENERAL DEPENDENCIES\r\nimport axios from 'axios'\r\n\r\nimport * as i from '../../interfaces'\r\n\r\n// DEBUGGING\r\nimport Debug from 'debug'\r\nimport moment from 'moment';\r\nconst debug = Debug('avapi')\r\n\r\nconst API_KEY = process.env.REACT_APP_ALPHAVANTAGE_API_KEY;\r\n\r\nlet normalizeSymbols = function (symbols: Array<i.IBestMatch>) {\r\n  return symbols.map(symbol => {\r\n    let obj: i.ISymbol = { symbol: '', name: '', type: '', currency: '' };\r\n    obj.symbol = symbol['1. symbol'];\r\n    obj.name = symbol['2. name'];\r\n    obj.type = symbol['3. type'];\r\n    obj.currency = symbol['8. currency'];\r\n    return obj;\r\n  });\r\n}\r\n\r\nlet searchSymbol = async function (keywords: string) {\r\n  const resp = await axios.get('https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=' + keywords + '&apikey=' + API_KEY);\r\n  debug('searchSymbol', resp.data);\r\n  return normalizeSymbols(resp.data.bestMatches);\r\n}\r\n\r\nlet normalizeCandles = function (candles: Array<i.ITimeSeries>) {\r\n  const parsed = [];\r\n\r\n  for (let [key2, value2] of Object.entries(candles)) {\r\n    let obj: i.ICandle = { date: 0, open: 0, high: 0, low: 0, close: 0, volume: 0 };\r\n\r\n    obj.date = moment(key2).toDate();\r\n    obj.open = value2['1. open'];\r\n    obj.high = value2['2. high'];\r\n    obj.low = value2['3. low'];\r\n    obj.close = value2['4. close'];\r\n    obj.volume = value2['5. volume'];\r\n\r\n    parsed.unshift(obj);\r\n  }\r\n  return parsed;\r\n}\r\n\r\nlet getCandles = async function (symbol: string, period: number) {\r\n  let url;\r\n  if (period < 61) {\r\n    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=' + symbol + '&interval=' + period + 'min&apikey=' + API_KEY;\r\n  } else {\r\n    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=' + symbol + '&apikey=' + API_KEY;\r\n  }\r\n  debug('getTimeSeriesIntraday', url);\r\n  const resp = await axios.get(url);\r\n  debug('getTimeSeriesIntraday', resp.data);\r\n  for (let [key1, value1] of Object.entries(resp.data)) {\r\n    if (key1.includes('Time Series')) {\r\n      return normalizeCandles(value1 as Array<i.ITimeSeries>);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  searchSymbol,\r\n  getCandles\r\n}"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","tester/data-sources/alphavantage/api.ts"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","debug","Debug","API_KEY","process","searchSymbol","keywords","a","axios","get","resp","data","bestMatches","map","symbol","obj","name","type","currency","normalizeCandles","candles","parsed","entries","key2","value2","date","open","high","low","close","volume","moment","toDate","unshift","getCandles","period","url","key1","value1","includes"],"mappings":"0IAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,G,gLIIhE,IAAMC,EAAQC,IAAM,SAEdC,EAAUC,mBAaZC,EAAY,uCAAG,WAAgBC,GAAhB,eAAAC,EAAA,sEACEC,IAAMC,IAAI,qEAAuEH,EAAW,WAAaH,GAD3G,cACXO,EADW,OAEjBT,EAAM,eAAgBS,EAAKC,MAFV,kBAGOD,EAAKC,KAAKC,YAbnBC,KAAI,SAAAC,GACjB,IAAIC,EAAuB,CAAED,OAAQ,GAAIE,KAAM,GAAIC,KAAM,GAAIC,SAAU,IAKvE,OAJAH,EAAID,OAASA,EAAO,aACpBC,EAAIC,KAAOF,EAAO,WAClBC,EAAIE,KAAOH,EAAO,WAClBC,EAAIG,SAAWJ,EAAO,eACfC,MAIQ,2CAAH,sDAMZI,EAAmB,SAAUC,GAG/B,IAFA,IAAMC,EAAS,GAEf,MAA2BtC,OAAOuC,QAAQF,GAA1C,eAAoD,CAAC,IAAD,YAA1CG,EAA0C,KAApCC,EAAoC,KAC9CT,EAAuB,CAAEU,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAElFf,EAAIU,KAAOM,IAAOR,GAAMS,SACxBjB,EAAIW,KAAOF,EAAO,WAClBT,EAAIY,KAAOH,EAAO,WAClBT,EAAIa,IAAMJ,EAAO,UACjBT,EAAIc,MAAQL,EAAO,YACnBT,EAAIe,OAASN,EAAO,aAEpBH,EAAOY,QAAQlB,GAEjB,OAAOM,GAGLa,EAAU,uCAAG,WAAgBpB,EAAgBqB,GAAhC,6BAAA5B,EAAA,6DAOfN,EAAM,wBAJJmC,EADED,EAAS,GACL,0EAA4ErB,EAAS,aAAeqB,EAAS,cAAgBhC,EAE7H,uEAAyEW,EAAS,WAAaX,GALxF,SAQIK,IAAMC,IAAI2B,GARd,OAQT1B,EARS,OASfT,EAAM,wBAAyBS,EAAKC,MATrB,MAUY5B,OAAOuC,QAAQZ,EAAKC,MAVhC,4DAUL0B,EAVK,KAUCC,EAVD,MAWTD,EAAKE,SAAS,eAXL,0CAYJpB,EAAiBmB,IAZb,uEAAH","file":"static/js/8.a1fdd415.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// GENERAL DEPENDENCIES\r\nimport axios from 'axios'\r\n\r\nimport * as i from '../../interfaces'\r\n\r\n// DEBUGGING\r\nimport Debug from 'debug'\r\nimport moment from 'moment';\r\nconst debug = Debug('avapi')\r\n\r\nconst API_KEY = process.env.REACT_APP_ALPHAVANTAGE_API_KEY;\r\n\r\nlet normalizeSymbols = function (symbols: Array<i.IAVBestMatch>) {\r\n  return symbols.map(symbol => {\r\n    let obj: i.ICommonSymbol = { symbol: '', name: '', type: '', currency: '' };\r\n    obj.symbol = symbol['1. symbol'];\r\n    obj.name = symbol['2. name'];\r\n    obj.type = symbol['3. type'];\r\n    obj.currency = symbol['8. currency'];\r\n    return obj;\r\n  });\r\n}\r\n\r\nlet searchSymbol = async function (keywords: string) {\r\n  const resp = await axios.get('https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=' + keywords + '&apikey=' + API_KEY);\r\n  debug('searchSymbol', resp.data);\r\n  return normalizeSymbols(resp.data.bestMatches);\r\n}\r\n\r\nlet normalizeCandles = function (candles: Array<i.IAVTimeSeries>) {\r\n  const parsed = [];\r\n\r\n  for (let [key2, value2] of Object.entries(candles)) {\r\n    let obj: i.ICommonCandle = { date: 0, open: 0, high: 0, low: 0, close: 0, volume: 0 };\r\n\r\n    obj.date = moment(key2).toDate();\r\n    obj.open = value2['1. open'];\r\n    obj.high = value2['2. high'];\r\n    obj.low = value2['3. low'];\r\n    obj.close = value2['4. close'];\r\n    obj.volume = value2['5. volume'];\r\n\r\n    parsed.unshift(obj);\r\n  }\r\n  return parsed;\r\n}\r\n\r\nlet getCandles = async function (symbol: string, period: number) {\r\n  let url;\r\n  if (period < 61) {\r\n    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=' + symbol + '&interval=' + period + 'min&apikey=' + API_KEY;\r\n  } else {\r\n    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=' + symbol + '&apikey=' + API_KEY;\r\n  }\r\n  debug('getTimeSeriesIntraday', url);\r\n  const resp = await axios.get(url);\r\n  debug('getTimeSeriesIntraday', resp.data);\r\n  for (let [key1, value1] of Object.entries(resp.data)) {\r\n    if (key1.includes('Time Series')) {\r\n      return normalizeCandles(value1 as Array<i.IAVTimeSeries>);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  searchSymbol,\r\n  getCandles\r\n}"],"sourceRoot":""}
{"version":3,"sources":["tester/data-sources/finnhub/api.ts","tester/data-sources/helpers.ts"],"names":["debug","Debug","normalizeSymbols","symbols","map","symbol","obj","name","type","currency","description","searchSymbol","keywords","a","axios","get","exchanges","console","log","data","allSymbols","exchange","code","filteredSymbols","helpers","concat","normalizeCandles","candles","parsed","i","t","length","date","open","high","low","close","volume","moment","toDate","o","h","l","c","v","unshift","getCandles","period","url","resp","s","applySearchterm","keyword","filter","includes"],"mappings":"mUAQMA,EAAQC,IAAM,WAIhBC,EAAmB,SAAUC,GAC/B,OAAOA,EAAQC,KAAI,SAAAC,GACjB,IAAIC,EAAuB,CAAED,OAAQ,GAAIE,KAAM,GAAIC,KAAM,GAAIC,SAAU,IAKvE,OAJAH,EAAID,OAASA,EAAOA,OACpBC,EAAIC,KAAOF,EAAOK,YAClBJ,EAAIE,KAAOH,EAAOK,YAClBJ,EAAIG,SAAWJ,EAAOK,YACfJ,MAIPK,EAAY,uCAAG,WAAgBC,GAAhB,iCAAAC,EAAA,sEACOC,IAAMC,IAAI,uEADjB,OACXC,EADW,OAEjBC,QAAQC,IAAI,YAAaF,EAAUG,MAC/BC,EAAqC,GAHxB,8BAIMJ,EAAUG,KAJhB,0EAINE,EAJM,kBAKKP,IAAMC,IAAI,mDAAqDM,EAASC,KAAO,+BALpF,QAKXnB,EALW,OAMfc,QAAQC,IAAI,UAAWf,EAAQgB,MACzBI,EAA0CC,IAAwBtB,EAAiBC,EAAQgB,MAAOP,GACxGQ,EAAaA,EAAWK,OAAOF,GARhB,qRAUjBvB,EAAM,eAAgBoB,GAVL,kBAWVA,GAXU,4EAAH,sDAcZM,EAAmB,SAAUC,GAG/B,IAFA,IAAMC,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAQG,EAAEC,OAAQF,IAAK,CACzC,IAAIvB,EAAuB,CAAE0B,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAElF/B,EAAI0B,KAAOM,IAAOX,EAAQG,EAAED,IAAIU,SAChCjC,EAAI2B,KAAON,EAAQa,EAAEX,GACrBvB,EAAI4B,KAAOP,EAAQc,EAAEZ,GACrBvB,EAAI6B,IAAMR,EAAQe,EAAEb,GACpBvB,EAAI8B,MAAQT,EAAQgB,EAAEd,GACtBvB,EAAI+B,OAASV,EAAQiB,EAAEf,GAEvBD,EAAOiB,QAAQvC,GAEjB,OAAOsB,GAGLkB,EAAU,uCAAG,WAAgBzC,EAAgB0C,GAAhC,iBAAAlC,EAAA,6DACD,OAEdb,EAAM,gBADAgD,EAAM,iDAAmD3C,EAAS,eAAiB0C,EAAS,4CAFnF,SAIIjC,IAAMC,IAAIiC,GAJd,UAITC,EAJS,OAKfjD,EAAM,gBAAiBiD,EAAK9B,MACR,OAAhB8B,EAAK9B,KAAK+B,EANC,0CAONxB,EAAiBuB,EAAK9B,OAPhB,eASbF,QAAQC,IAAI,qBATC,kBAUN,IAVM,4CAAH,yD,iCCrDd,kCAAO,IAAIiC,EAAkB,SAAShD,EAAiCiD,GACrE,OAAOjD,EAAQkD,QAAO,SAAAhD,GACpB,OAAOA,EAAOA,OAAOiD,SAASF,IAAY/C,EAAOE,KAAK+C,SAASF","file":"static/js/4.5b50f5f2.chunk.js","sourcesContent":["// GENERAL DEPENDENCIES\r\nimport axios from 'axios'\r\nimport * as helpers from '../helpers'\r\nimport * as i from '../../interfaces'\r\n\r\n// DEBUGGING\r\nimport Debug from 'debug'\r\nimport moment from 'moment';\r\nconst debug = Debug('finnhub')\r\n\r\nconst API_KEY = process.env.REACT_APP_FINNHUB_API_KEY;\r\n\r\nlet normalizeSymbols = function (symbols: Array<i.IFinnhubStockSymbol>) {\r\n  return symbols.map(symbol => {\r\n    let obj: i.ICommonSymbol = { symbol: '', name: '', type: '', currency: '' };\r\n    obj.symbol = symbol.symbol;\r\n    obj.name = symbol.description;\r\n    obj.type = symbol.description;\r\n    obj.currency = symbol.description;\r\n    return obj;\r\n  });\r\n}\r\n\r\nlet searchSymbol = async function (keywords: string) {\r\n  const exchanges = await axios.get('https://finnhub.io/api/v1/stock/exchange?token=boqnodnrh5rbk6e6gaf0');\r\n  console.log('exchanges', exchanges.data);\r\n  let allSymbols: Array<i.ICommonSymbol> = [];\r\n  for (const exchange of exchanges.data) {\r\n    let symbols = await axios.get('https://finnhub.io/api/v1/stock/symbol?exchange=' + exchange.code + '&token=' + API_KEY);\r\n    console.log('symbols', symbols.data);\r\n    const filteredSymbols: Array<i.ICommonSymbol> = helpers.applySearchterm(normalizeSymbols(symbols.data), keywords);\r\n    allSymbols = allSymbols.concat(filteredSymbols);\r\n  }\r\n  debug('searchSymbol', allSymbols);\r\n  return allSymbols;\r\n}\r\n\r\nlet normalizeCandles = function (candles: i.IFinnhubStockData) {\r\n  const parsed = [];\r\n\r\n  for (let i = 0; i < candles.t.length; i++) {\r\n    let obj: i.ICommonCandle = { date: 0, open: 0, high: 0, low: 0, close: 0, volume: 0 };\r\n\r\n    obj.date = moment(candles.t[i]).toDate();\r\n    obj.open = candles.o[i];\r\n    obj.high = candles.h[i];\r\n    obj.low = candles.l[i];\r\n    obj.close = candles.c[i];\r\n    obj.volume = candles.v[i];\r\n\r\n    parsed.unshift(obj);\r\n  }\r\n  return parsed;\r\n}\r\n\r\nlet getCandles = async function (symbol: string, period: number) {\r\n  const count = 259200;\r\n  const url = 'https://finnhub.io/api/v1/stock/candle?symbol=' + symbol + '&resolution=' + period + '&count=' + count + '&token=' + API_KEY;\r\n  debug('Stock Candles', url);\r\n  const resp = await axios.get(url);\r\n  debug('Stock Candles', resp.data);\r\n  if (resp.data.s === \"ok\") {\r\n    return normalizeCandles(resp.data);\r\n  } else {\r\n    console.log('getCandles failed');\r\n    return [];\r\n  }\r\n}\r\n\r\nexport {\r\n  searchSymbol,\r\n  getCandles\r\n}","import * as i from '../interfaces';\r\n\r\nexport let applySearchterm = function(symbols: Array<i.ICommonSymbol>, keyword: string) {\r\n  return symbols.filter(symbol => {\r\n    return symbol.symbol.includes(keyword) || symbol.name.includes(keyword);\r\n  });\r\n}"],"sourceRoot":""}